substitutions:
  name: ag-open-air-o-1ppt
  friendly_name: AG Open Air O-1PPT
  config_version: 2.0.3
  name_add_mac_suffix: 'false'
esphome:
  name: ag-open-air-o-1ppt
  friendly_name: AG Open Air O-1PPT
  name_add_mac_suffix: false
  project:
    name: mallocarray.airgradient
    version: 2.0.3
  min_version: 2023.12.0
  on_boot:
  - priority: 200.0
    then:
    - if:
        condition:
          switch.is_on:
            id: upload_airgradient
        then:
        - http_request.post:
            url: !lambda |-
              return "http://hw.airgradient.com/sensors/airgradient:" + get_mac_address() + "/measures";
            headers:
              Content-Type: application/json
            json:
              wifi: !lambda |-
                return to_string(-50);
            verify_ssl: true
            method: POST
  build_path: build/ag-open-air-o-1ppt
  area: ''
  platformio_options: {}
  includes: []
  libraries: []
esp32:
  board: esp32-c3-devkitm-1
  flash_size: 4MB
  framework:
    version: 2.0.5
    source: ~3.20005.0
    platform_version: platformio/espressif32@5.4.0
    type: arduino
  variant: ESP32C3
logger:
  baud_rate: 0
  logs:
    component: ERROR
  tx_buffer_size: 512
  deassert_rts_dtr: false
  hardware_uart: USB_CDC
  level: DEBUG
captive_portal: {}
uart:
- rx_pin:
    number: 0
    mode:
      input: true
      output: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  tx_pin:
    number: 1
    mode:
      output: true
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  baud_rate: 9600
  id: senseair_s8_uart
  rx_buffer_size: 256
  stop_bits: 1
  data_bits: 8
  parity: NONE
- rx_pin:
    number: 20
    mode:
      input: true
      output: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  tx_pin:
    number: 21
    mode:
      output: true
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    ignore_strapping_warning: false
    drive_strength: 20.0
  baud_rate: 9600
  id: pms5003_uart
  rx_buffer_size: 256
  stop_bits: 1
  data_bits: 8
  parity: NONE
i2c:
- sda: 7
  scl: 6
  frequency: 400000.0
  scan: true
button:
- platform: factory_reset
  disabled_by_default: true
  name: Factory Reset ESP
  id: factory_reset_all
  icon: mdi:restart-alert
  entity_category: config
  device_class: restart
sensor:
- platform: pmsx003
  type: PMS5003T
  uart_id: pms5003_uart
  pm_2_5:
    name: PM 2.5
    id: pm_2_5
    device_class: pm25
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_1_0:
    name: PM 1.0
    id: pm_1_0
    device_class: pm1
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_10_0:
    name: PM 10.0
    id: pm_10_0
    device_class: pm10
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_0_3um:
    name: PM 0.3
    id: pm_0_3um
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: /dL
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  temperature:
    name: Temperature
    id: temp
    filters:
    - lambda: !lambda |-
        if (x < 10.0) return (x * 1.327) - 6.738;
        return (x * 1.181) - 5.113;
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    state_class: measurement
  humidity:
    name: Humidity
    id: humidity
    filters:
    - lambda: !lambda |-
        return x * 1.259 + 7.34;
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: '%'
    accuracy_decimals: 1
    device_class: humidity
    state_class: measurement
  update_interval: 0s
- platform: template
  name: PM 2.5 AQI
  id: pm_2_5_aqi
  update_interval: 5min
  unit_of_measurement: AQI
  icon: mdi:air-filter
  accuracy_decimals: 0
  filters:
  - skip_initial: 1
  lambda: !lambda |-
    // https://en.wikipedia.org/wiki/Air_quality_index#Computing_the_AQI
    // Borrowed from https://github.com/kylemanna/sniffer/blob/master/esphome/sniffer_common.yaml
    if (id(pm_2_5).state <= 12.0) {
    // good
    return((50.0 - 0.0) / (12.0 - 0.0) * (id(pm_2_5).state - 0.0) + 0.0);
    } else if (id(pm_2_5).state <= 35.4) {
    // moderate
    return((100.0 - 51.0) / (35.4 - 12.1) * (id(pm_2_5).state - 12.1) + 51.0);
    } else if (id(pm_2_5).state <= 55.4) {
    // usg
    return((150.0 - 101.0) / (55.4 - 35.5) * (id(pm_2_5).state - 35.5) + 101.0);
    } else if (id(pm_2_5).state <= 150.4) {
    // unhealthy
    return((200.0 - 151.0) / (150.4 - 55.5) * (id(pm_2_5).state - 55.5) + 151.0);
    } else if (id(pm_2_5).state <= 250.4) {
    // very unhealthy
    return((300.0 - 201.0) / (250.4 - 150.5) * (id(pm_2_5).state - 150.5) + 201.0);
    } else if (id(pm_2_5).state <= 350.4) {
    // hazardous
    return((400.0 - 301.0) / (350.4 - 250.5) * (id(pm_2_5).state - 250.5) + 301.0);
    } else if (id(pm_2_5).state <= 500.4) {
    // hazardous 2
    return((500.0 - 401.0) / (500.4 - 350.5) * (id(pm_2_5).state - 350.5) + 401.0);
    } else {
    return(500);
    }
  disabled_by_default: false
  force_update: false
- platform: pmsx003
  type: PMS5003T
  uart_id: senseair_s8_uart
  pm_2_5:
    name: PM 2.5 (2)
    id: pm_2_5_2
    device_class: pm25
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_1_0:
    name: PM 1.0 (2)
    id: pm_1_0_2
    device_class: pm1
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_10_0:
    name: PM 10.0 (2)
    id: pm_10_0_2
    device_class: pm10
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: µg/m³
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  pm_0_3um:
    name: PM 0.3 (2)
    id: pm_0_3um_2
    filters:
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: /dL
    icon: mdi:chemical-weapon
    accuracy_decimals: 0
    state_class: measurement
  temperature:
    name: Temperature (2)
    id: temp_2
    filters:
    - lambda: !lambda |-
        if (x < 10.0) return (x * 1.327) - 6.738;
        return (x * 1.181) - 5.113;
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: °C
    accuracy_decimals: 1
    device_class: temperature
    state_class: measurement
  humidity:
    name: Humidity (2)
    id: humidity_2
    filters:
    - lambda: !lambda |-
        return x * 1.259 + 7.34;
    - sliding_window_moving_average:
        window_size: 30
        send_every: 30
        send_first_at: 1
    disabled_by_default: false
    force_update: false
    unit_of_measurement: '%'
    accuracy_decimals: 1
    device_class: humidity
    state_class: measurement
  update_interval: 0s
- platform: template
  id: pm_2_5_avg
  name: PM 2.5 (Average)
  lambda: !lambda |-
    return (id(pm_2_5).state + id(pm_2_5_2).state) / 2.0;
  device_class: pm25
  unit_of_measurement: µg/m³
  icon: mdi:chemical-weapon
  accuracy_decimals: 0
  state_class: measurement
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: template
  id: pm_1_0_avg
  name: PM 1.0 (Average)
  lambda: !lambda |-
    return (id(pm_1_0).state + id(pm_1_0_2).state) / 2.0;
  device_class: pm1
  unit_of_measurement: µg/m³
  icon: mdi:chemical-weapon
  accuracy_decimals: 0
  state_class: measurement
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: template
  id: pm_10_0_avg
  name: PM 10.0 (Average)
  lambda: !lambda |-
    return (id(pm_10_0).state + id(pm_10_0_2).state) / 2.0;
  device_class: pm10
  unit_of_measurement: µg/m³
  icon: mdi:chemical-weapon
  accuracy_decimals: 0
  state_class: measurement
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: template
  id: pm_0_3um_avg
  name: PM 0.3 (Average)
  lambda: !lambda |-
    return (id(pm_0_3um).state + id(pm_0_3um_2).state) / 2.0;
  unit_of_measurement: /dL
  icon: mdi:chemical-weapon
  accuracy_decimals: 0
  state_class: measurement
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: template
  id: temp_avg
  name: Temperature (Average)
  lambda: !lambda |-
    return (id(temp).state + id(temp_2).state) / 2.0;
  unit_of_measurement: °C
  accuracy_decimals: 1
  device_class: temperature
  state_class: measurement
  icon: mdi:thermometer
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: template
  id: humidity_avg
  name: Humidity (Average)
  lambda: !lambda |-
    return (id(humidity).state + id(humidity_2).state) / 2.0;
  unit_of_measurement: '%'
  accuracy_decimals: 1
  device_class: humidity
  state_class: measurement
  icon: mdi:water-percent
  update_interval: 1s
  filters:
  - sliding_window_moving_average:
      window_size: 30
      send_every: 15
      send_first_at: 1
  disabled_by_default: false
  force_update: false
- platform: sgp4x
  voc:
    name: VOC Index
    id: voc
    disabled_by_default: false
    force_update: false
    icon: mdi:radiator
    accuracy_decimals: 0
    device_class: aqi
    state_class: measurement
  nox:
    name: NOx Index
    id: nox
    disabled_by_default: false
    force_update: false
    icon: mdi:radiator
    accuracy_decimals: 0
    device_class: aqi
    state_class: measurement
  compensation:
    temperature_source: temp
    humidity_source: humidity
  store_baseline: true
  update_interval: 60s
  address: 0x59
- platform: wifi_signal
  name: WiFi Signal
  id: wifi_dbm
  update_interval: 60s
  disabled_by_default: false
  force_update: false
  unit_of_measurement: dBm
  accuracy_decimals: 0
  device_class: signal_strength
  state_class: measurement
  entity_category: diagnostic
- platform: uptime
  name: Uptime
  id: device_uptime
  disabled_by_default: false
  force_update: false
  unit_of_measurement: s
  icon: mdi:timer-outline
  accuracy_decimals: 0
  device_class: duration
  state_class: total_increasing
  entity_category: diagnostic
  update_interval: 60s
interval:
- interval: 150s
  then:
  - if:
      condition:
        switch.is_on:
          id: upload_airgradient
      then:
      - http_request.post:
          url: !lambda |-
            return "http://hw.airgradient.com/sensors/airgradient:" + get_mac_address() + "/measures";
          headers:
            Content-Type: application/json
          body: !lambda |
            String jsonString;
            StaticJsonDocument<1024> doc;

            doc["wifi"] = id(wifi_dbm).state;

            doc["pm01"] = to_string(id(pm_1_0_avg).state);
            doc["pm02"] = to_string(id(pm_2_5_avg).state);
            doc["pm10"] = to_string(id(pm_10_0_avg).state);
            doc["pm003_count"] = to_string(id(pm_0_3um_avg).state);
            doc["atmp"] = to_string(id(temp_avg).state);
            doc["rhum"] = to_string(id(humidity_avg).state);

            // We don't have access to the boot loop counter in esphome, so just send a 1
            // See: https://github.com/esphome/issues/issues/1539
            doc["boot"] = "1";

            JsonObject channels = doc.createNestedObject("channels");

            JsonObject channels_1 = channels.createNestedObject("1");
            channels_1["pm01"] = to_string(id(pm_1_0).state);
            channels_1["pm02"] = to_string(id(pm_2_5).state);
            channels_1["pm10"] = to_string(id(pm_10_0).state);
            channels_1["pm003_count"] = to_string(id(pm_0_3um).state);
            channels_1["atmp"] = to_string(id(temp).state);
            channels_1["rhum"] = to_string(id(humidity).state);

            JsonObject channels_2 = channels.createNestedObject("2");
            channels_2["pm01"] = to_string(id(pm_1_0_2).state);
            channels_2["pm02"] = to_string(id(pm_2_5_2).state);
            channels_2["pm10"] = to_string(id(pm_10_0_2).state);
            channels_2["pm003_count"] = to_string(id(pm_0_3um_2).state);
            channels_2["atmp"] = to_string(id(temp_2).state);
            channels_2["rhum"] = to_string(id(humidity_2).state);

            // Serialize the JSON document into the string
            serializeJson(doc, jsonString);

            // Convert String to std::string
            std::string stdJsonString(jsonString.c_str());

            return stdJsonString;
          verify_ssl: true
          method: POST
  startup_delay: 0s
- interval: 150s
  then:
  - output.turn_on:
      id: watchdog
  - delay: 20ms
  - output.turn_off:
      id: watchdog
  startup_delay: 0s
switch:
- platform: template
  name: Upload to AirGradient Dashboard
  id: upload_airgradient
  restore_mode: RESTORE_DEFAULT_ON
  optimistic: true
  disabled_by_default: false
  assumed_state: false
- platform: safe_mode
  name: Flash Mode (Safe Mode)
  icon: mdi:cellphone-arrow-down
  disabled_by_default: false
  restore_mode: ALWAYS_OFF
  entity_category: config
http_request:
  useragent: ESPHome
  follow_redirects: true
  redirect_limit: 3
  timeout: 5s
output:
- platform: gpio
  id: watchdog
  pin:
    number: 2
    ignore_strapping_warning: true
    mode:
      output: true
      input: false
      open_drain: false
      pullup: false
      pulldown: false
    inverted: false
    drive_strength: 20.0
api:
  port: 6053
  password: \033[5m''\033[6m
  reboot_timeout: 15min
ota:
  safe_mode: true
  version: 2
  port: 3232
  reboot_timeout: 5min
  num_attempts: 10
wifi:
  ap:
    ap_timeout: 1min
  domain: .local
  reboot_timeout: 15min
  power_save_mode: LIGHT
  fast_connect: false
  passive_scan: false
  enable_on_boot: true
  use_address: ag-open-air-o-1ppt.local
dashboard_import:
  package_import_url: github://MallocArray/airgradient_esphome/airgradient-open-air-o-1ppt.yaml
  import_full_config: false

